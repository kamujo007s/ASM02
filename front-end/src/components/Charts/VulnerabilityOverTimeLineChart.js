// VulnerabilityOverTimeLineChart.js
import React, { useEffect, useRef } from 'react';
import { Line } from 'react-chartjs-2';
import { ConfigProvider, theme } from 'antd';
import { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Tooltip, Legend } from 'chart.js';

ChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Tooltip, Legend);

const VulnerabilityOverTimeLineChart = ({ vulnerabilitiesData }) => {
  const chartRef = useRef(null);
  const chartInstanceRef = useRef(null); // ใช้ ref เก็บ instance ของ chart

  useEffect(() => {
    const canvas = chartRef.current;

    if (canvas && vulnerabilitiesData.length > 0) {
      if (chartInstanceRef.current) {
        chartInstanceRef.current.destroy(); // ทำลาย chart เดิมก่อน
      }

      const ctx = canvas.getContext('2d');
      chartInstanceRef.current = new ChartJS(ctx, {
        type: 'line',
        data: {
          labels: vulnerabilitiesData.map(item => item.year),
          datasets: [{
            label: 'Vulnerabilities Over Time',
            data: vulnerabilitiesData.map(item => item.totalCount),
            fill: false,
            borderColor: '#fa8c16',
            pointBackgroundColor: '#ff6384',
            pointBorderColor: '#fff',
            borderWidth: 2,
          }]
        },
        options: {
          responsive: true,
          scales: {
            y: { beginAtZero: true }
          }
        }
      });
    }

    // ทำลาย chart เมื่อ component ถูก unmount
    return () => {
      if (chartInstanceRef.current) {
        chartInstanceRef.current.destroy();
      }
    };
  }, [vulnerabilitiesData]); // เพิ่ม dependencies เฉพาะ vulnerabilitiesData

  if (!vulnerabilitiesData || vulnerabilitiesData.length === 0) {
    return <div>Loading...</div>;
  }

  return (
    <ConfigProvider theme={{ algorithm: theme.defaultAlgorithm }}>
      <div style={{ width: '100%', height: '300px' }}>
        <canvas ref={chartRef}></canvas> {/* ใช้ canvas แทน component Line */}
      </div>
    </ConfigProvider>
  );
};

export default VulnerabilityOverTimeLineChart;
