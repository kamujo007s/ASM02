import React, { useState, useEffect } from 'react';
import axios from 'axios';
import RiskBarChart from './RiskBarChart'; // เปลี่ยนจาก PieChart เป็น BarChart

const VulnerabilityDashboard = () => {
  const [summary, setSummary] = useState([]);

  useEffect(() => {
    fetchSummary();
  }, []);

  const fetchSummary = async () => {
    try {
      const response = await axios.get('/cve/vulnerability-summary');
      const sortedSummary = response.data.sort((a, b) => {
        if (a.operating_system === b.operating_system) {
          return a.os_version.localeCompare(b.os_version);
        }
        return a.operating_system.localeCompare(b.operating_system);
      });
      setSummary(sortedSummary);
    } catch (error) {
      console.error('Error fetching vulnerability summary:', error);
    }
  };
  

  const groupByOS = (summaryData) => {
    const grouped = {};
    summaryData.forEach(({ operating_system, riskLevels, totalCount, os_version }) => {
      if (!grouped[operating_system]) {
        grouped[operating_system] = [];
      }
      grouped[operating_system].push({ os_version, riskLevels, totalCount });
    });
    return grouped;
  };

  const groupedSummary = groupByOS(summary);

  return (
    <div className="container mt-5">
      <h3>Vulnerability Risk Summary by OS and Version</h3>
      <div className="row">
        {Object.keys(groupedSummary).map((osName) => (
          <div className="col-md-12 mb-4" key={osName}>
            <div className="card">
              <div className="card-body">
                <h5 className="card-title">{osName}</h5>
                <div className="d-flex flex-row flex-wrap">
                  {groupedSummary[osName].map(({ os_version, riskLevels, totalCount }, index) => (
                    <div key={index} className="mr-3 p-2 ps-2">
                      <h6>{os_version ? `Version: ${os_version}` : 'Unknown Version'}</h6>
                      <RiskBarChart riskLevels={riskLevels} osName={osName} version={os_version} />
                      <p className="mt-3">
                        <strong>Total Vulnerabilities:</strong> {totalCount}
                      </p>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

export default VulnerabilityDashboard;
